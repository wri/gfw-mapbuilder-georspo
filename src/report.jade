extends jade/layout.jade

block append styles
  style
    :stylus
      @require 'css/report'
      
  link(rel='stylesheet', href='https://js.arcgis.com/#{esriVersion}/esri/css/esri.css')
  link(rel='stylesheet', href='https://js.arcgis.com/#{esriVersion}/dijit/themes/tundra/tundra.css')


block append content
  div.report.inner
    header.report-header.flex
      div.report-header__logo-container
        a#logo-anchor
          img#logo.report-header__logo
      div.report-header__title-container
        h1#report-title.report-header__title
        h2#report-subtitle.report-header__subtitle
    //- h3#feature-title.feature-title
    div#map.map
    div#popup-content.popup-content
    div.results-container.results__restoration.hidden#restoration
    div.results-container.results__slope.hidden#slope
      h3.slope-header#slope-analysis-header
      h4.slope__description#slope-analysis-description
      div#slope-chart.chart-container
      div#slope-table.table-container
    div.results-container.results__loss-badge.hidden#total-loss-badge
      div.results__loss-gain--label
      div.results__loss-gain--range
      span.results__loss--count
      span.results__loss--unit Ha
    div.results-container.results__gain-badge.hidden#total-gain-badge
      div.results__loss-gain--label
      div.results__loss-gain--range
      span.results__gain--count
      span.results__gain--unit Ha
    div.results-container#tc-loss
    div.results-container#lc-loss
    div.results-container#bio-loss
    div.results-container#intact-loss
    div.results-container#mangroves
    div.results-container#sad-alerts
    div.results-container#glad-alerts
    div.results-container#terrai-alerts
    div.results-container.results__fires-badge.hidden#viirs-badge
      div.results__viirs-pre
      div.results__viirs-count
      div.results__viirs-active
      div.results__viirs-post
    div.results-container.results__fires-badge.hidden#modis-badge
      div.results__modis-pre
      div.results__modis-count
      div.results__modis-active
      div.results__modis-post
    div.results-container#lc-composition
block append esri-script
  script.
    var _app = {
      cache: '#{version}',
      esri: '#{esriVersion}',
      base: '#{base}'
    };
    function makePath (base, path) {
      var position = base.length - 1;
      return !path ?
        (base.indexOf('/', position) !== position ? base + '/' : base) :
        (base.indexOf('/', position) !== position ?
          base + '/' + path :
          base + path
        )
    }
    function getResourcePath (path) {
      var position = path.length - 1;
      return path.indexOf('/', position) === position ? path.slice(0, -1) : path;
    }
    // Change this to '' if _app.base is a remote url
    var base = location.href.replace(/\/[^/]+$/, '');
    // Add trailing slash if it is not present
    base = makePath(base);
    // Add _app.base if it is present
    if (_app.base) { base = makePath(base, _app.base); }
    var dojoConfig = {
      parseOnLoad: false,
      async: true,
      packages: [
        { name: 'root', location: getResourcePath(location.href.replace(/\/[^/]+$/, '')) },
        { name: 'js', location: makePath(base, 'js')},
        { name: 'vendor', location: makePath(base, 'vendor')},
        { name: 'utils', location: makePath(base, 'js/utils')},
        { name: 'helpers', location: makePath(base, 'js/helpers')},
        { name: 'report', location: makePath(base, 'js/report')},
        //- { name: 'stores', location: base + 'js/stores' },
        //- { name: 'actions', location: base + 'js/actions' },
        { name: 'constants', location: makePath(base,'js/constants')}
        //- { name: 'components', location: base + 'js/components' }
      ],
      aliases: [
        ['resources', 'root/resources'],
        //- ['alt', 'vendor/alt/dist/alt.min'],
        //- ['react', 'vendor/react/react.min'],
        //- ['react-dom', 'vendor/react/react-dom.min'],
        ['babel-polyfill', 'vendor/babel-polyfill/browser-polyfill']
      ],
      deps: ['dojo/domReady!'],
      callback: function () {require(['js/reportMain']);}
    };
    
  //- script.
  //-   var _app = {
  //-     cache: '#{version}',
  //-     esri: '#{esriVersion}',
  //-     base: '#{base}'
  //-   };
  //- 
  //-   function makePath (base, path) {
  //-     var position = base.length - 1;
  //-     return !path ?
  //-       (base.indexOf('/', position) !== position ? base + '/' : base) :
  //-       (base.indexOf('/', position) !== position ?
  //-         base + '/' + path :
  //-         base + path
  //-       )
  //-   }
  //-   function getResourcePath (path) {
  //-     var position = path.length - 1;
  //-     return path.indexOf('/', position) === position ? path.slice(0, -1) : path;
  //-   }
  //-   // Change this to '' if _app.base is a remote url
  //-   var base = location.href.replace(/\/[^/]+$/, '');
  //-   // Add trailing slash if it is not present
  //-   base = makePath(base);
  //-   // Add _app.base if it is present
  //-   if (_app.base) { base = makePath(base, _app.base); }
  //-   
  //-   function loadjsfile(filename, base) {
  //-     const dojoInit = base + filename;
  //-     const script = document.createElement('script');
  //-     script.src = dojoInit;
  //-     document.getElementsByTagName('head')[0].appendChild(script);
  //-   }
  //-   
  //-   loadjsfile('/vendor/arcgis-api/dojo/dojo.js', base);
  //- PROD: if new modules are added, regenerate the JSAPI build
  script(src='https://my.gfw-mapbuilder.org/js/arcgis-api-mapbuilder-1.2/dojo/dojo.js', async)
  //- DEV: Use the normal JSAPI
  //- script(src='//js.arcgis.com/#{esriVersion}/init.js', async)
  //- script(src='/vendor/dojo/dojo.js', async)
  script.
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
